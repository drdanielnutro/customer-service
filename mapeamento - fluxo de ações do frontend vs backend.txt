## MAPEAMENTO COMPLETO‚ÄØ‚Äì PROFESSOR‚ÄØVIRTUAL

*(vers√£o revisada¬†‚Äî alinhada ao novo sistema de¬†artifacts, armazenamento GCS e fluxos ass√≠ncronos)*

---

### VIS√ÉO¬†GERAL

1. **Audi√ß√£o ‚Üí Transcri√ß√£o**
2. **An√°lise de texto ‚Üí Decis√£o visual**
3. **Captura de imagem (opcional)**
4. **Upload‚ÄØ‚Üí‚ÄØCria√ß√£o de artifact**
5. **An√°lise de imagem (opcional)**
6. **Gera√ß√£o de resposta (texto¬†+¬†TTS sob demanda)**

> **Dev¬†vs¬†Produ√ß√£o**
> *Dev*: artifacts mantidos‚ÄØem mem√≥ria (descartados ao reiniciar)
> *Produ√ß√£o*: artifacts salvos no **GCS**¬†(`gs://$GCS_BUCKET_NAME`) sob pol√≠tica de reten√ß√£o ajust√°vel.

---

## 1. FLUXO: IN√çCIO DA INTERA√á√ÉO¬†‚Äì¬†A√á√ÉO DE¬†FALAR

| Etapa   | A√ß√£o                | Ator              | Detalhes                                          |
| ------- | ------------------- | ----------------- | ------------------------------------------------- |
| **1.1** | Pressionar bot√£o¬†üéô | Usu√°rio (crian√ßa) | Mant√©m pressionado ‚áí inicia captura de √°udio      |
| **1.2** | Captura cont√≠nua    | Frontend          | Grava √°udio enquanto o bot√£o est√° pressionado     |
| **1.3** | Soltar bot√£o        | Usu√°rio           | Frontend encerra a grava√ß√£o e gera arquivo `.wav` |

---

## 2. FLUXO: UPLOAD E TRANSCRI√á√ÉO DA FALA

| Etapa   | A√ß√£o               | Ator                          | Dados                                                                             | Resultado                          |
| ------- | ------------------ | ----------------------------- | --------------------------------------------------------------------------------- | ---------------------------------- |
| **2.1** | Empacotar √°udio    | Frontend                      | Converte‚ÄØ‚Üí‚ÄØBase64, JSON:<br>`{content, mime_type, filename, session_id, user_id}` | Pronto p/ upload                   |
| **2.2** | **POST** `/upload` | Frontend                      | Payload JSON                                                                      | Backend chama `handle_file_upload` |
| **2.3** | Criar artifact     | Backend                       | Salva via `save_artifact` (async)                                                 | Retorna `{filename, version}`      |
| **2.4** | Confirmar¬†upload   | Frontend                      | Recebe resposta                                                                   | Guarda `version` para uso futuro   |
| **2.5** | Transcrever √°udio  | Backend (`transcrever_audio`) | L√™ artifact (`load_artifact`, await)                                              | Retorna texto transcrito           |

---

## 3. FLUXO: AN√ÅLISE DE¬†TEXTO¬†E¬†DECIS√ÉO VISUAL

| Etapa   | A√ß√£o                        | Ator    | Descri√ß√£o                                     |                                       |
| ------- | --------------------------- | ------- | --------------------------------------------- | ------------------------------------- |
| **3.1** | Detectar necessidade visual | Backend | Procura express√µes como ‚Äúesse exerc√≠cio aqui‚Äù |                                       |
| **3.2** | Decidir                     | Backend | **Se** alta confian√ßa ‚áí sinaliza c√¢mera       | Caso contr√°rio ‚áí gera resposta direta |

---

## 4. FLUXO: CAPTURA DE IMAGEM (OPCIONAL)

| Etapa     | A√ß√£o            | Ator     | Detalhes                                |
| --------- | --------------- | -------- | --------------------------------------- |
| **4.1**   | Abrir c√¢mera    | Frontend | Imediato, sem pop‚Äëup                    |
| **4.2**   | Preview ao vivo | Frontend | Exibe vis√£o da c√¢mera                   |
| **4.3.A** | Capturar¬†üì∑     | Usu√°rio  | Foto instant√¢nea, sem preview posterior |
| **4.3.B** | Fechar¬†X        | Usu√°rio  | Cancela; backend continua sem imagem    |

---

## 5. FLUXO: UPLOAD E AN√ÅLISE DA IMAGEM

| Etapa   | A√ß√£o                   | Ator                                    | Dados                                         | Resultado                                            |
| ------- | ---------------------- | --------------------------------------- | --------------------------------------------- | ---------------------------------------------------- |
| **5.1** | Empacotar imagem       | Frontend                                | Base64‚ÄØ+‚ÄØJSON, inclui `contexto_pergunta`     |                                                      |
| **5.2** | **POST** `/upload`     | Frontend                                | Payload JSON                                  | Backend cria artifact; devolve `{filename, version}` |
| **5.3** | Confirmar¬†upload       | Frontend                                | Guarda `version`                              |                                                      |
| **5.4** | Analisar imagem        | Backend (`analisar_imagem_educacional`) | Busca artifact (`await¬†load_artifact`)        | Extrai info + avalia qualidade                       |
| **5.5** | Fallback se inadequada | Backend                                 | Solicita nova foto **ou** continua sem imagem |                                                      |

---

## 6. FLUXO: GERA√á√ÉO DA¬†RESPOSTA

| Etapa   | A√ß√£o              | Ator               | Inputs                                            | Sa√≠da                |
| ------- | ----------------- | ------------------ | ------------------------------------------------- | -------------------- |
| **6.1** | Combinar contexto | Backend            | Texto transcrito¬†+¬†insights da imagem (se houver) | Resposta estruturada |
| **6.2** | Enviar resposta   | Backend ‚Üí Frontend | JSON `{texto_resposta, sugestao_audio: bool}`     |                      |

---

## 7. FLUXO: APRESENTA√á√ÉO & √ÅUDIO¬†TTS

| Etapa   | A√ß√£o                  | Ator            | Detalhes                                                                                     |   |
| ------- | --------------------- | --------------- | -------------------------------------------------------------------------------------------- | - |
| **7.1** | Exibir texto          | Frontend        | Mostra na tela                                                                               |   |
| **7.2** | Tocar som curto       | Frontend        | ‚ÄúProntinho!‚Äù (pr√©‚Äëgravado)                                                                   |   |
| **7.3** | Mostrar bot√£o ‚ñ∂Ô∏è      | Frontend        | Se `sugestao_audio == true`                                                                  |   |
| **7.4** | Gerar TTS¬†sob demanda | Usu√°rio toca ‚ñ∂Ô∏è | Backend (`gerar_audio_tts`) cria artifact (`mp3`, retorna `version`); Frontend faz streaming |   |

---

## 8. COMPORTAMENTOS TRANSVERSAIS

| C√≥digo                        | Tema                                                                                               | Descri√ß√£o / Observa√ß√£o |
| ----------------------------- | -------------------------------------------------------------------------------------------------- | ---------------------- |
| **A. Intera√ß√£o pontual**      | Eventos discretos; backend ass√≠ncrono (`await`)                                                    |                        |
| **B. Redu√ß√£o de fric√ß√£o**     | C√¢mera sem confirma√ß√£o; **handshake de upload √© transparente ao usu√°rio**                          |                        |
| **C. Multicanal otimizado**   | Som curto imediato; TTS on‚Äëdemand                                                                  |                        |
| **D. Fallbacks robustos**     | Continua √∫til se √°udio/imagem falharem                                                             |                        |
| **E. Privacidade & Reten√ß√£o** | **Dev**: artifacts em mem√≥ria (ef√™meros) <br> **Prod**: artifacts no GCS com reten√ß√£o configur√°vel |                        |

---

### NOTAS T√âCNICAS

* Todas as tools `async def ‚Ä¶`¬†‚Äî usam `await load_artifact / save_artifact`.
* Upload obrigat√≥rio via `handle_file_upload`; n√£o usar APIs deprecated (`session.get_artifact`, etc.).
* Frontend **deve** enviar `mime_type` correto e aguardar `{version}`.
* Vari√°veis de ambiente regulam `memory`‚ÄØ√ó‚ÄØ`gcs`.

---

#### Checklist de Conformidade

1. **√Åudio**: Base64‚ÄØ‚Üí‚ÄØupload‚ÄØ‚Üí‚ÄØartifact‚ÄØversion‚ÄØ‚Üí‚ÄØtranscri√ß√£o
2. **Imagem**: Base64‚ÄØ‚Üí‚ÄØupload‚ÄØ‚Üí‚ÄØartifact‚ÄØversion‚ÄØ‚Üí‚ÄØan√°lise
3. **TTS**: Gera mp3, devolve `nome`‚ÄØ+‚ÄØ`version`
4. **Pol√≠tica de reten√ß√£o** documentada quando em produ√ß√£o

---

> Documento atualizado em **29‚ÄØjul‚ÄØ2025** para refletir a integra√ß√£o completa com Google‚ÄØADK‚ÄØ1.5 e suporte a armazenamento GCS.
